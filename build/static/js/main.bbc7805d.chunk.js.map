{"version":3,"sources":["StateProvider.js","components/getLocation.js","components/Home.js","components/About.js","components/Contact.js","components/Error.js","components/Navigation.js","firebase.js","reducer.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","getLocation","a","resp","fetch","method","query","format","headers","useQueryString","response","console","log","Home","useEffect","className","style","display","flex","flexDirection","About","Contact","Error","Navigation","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","FacebookAuthProvider","actionTypes","state","action","type","user","Login","e","useState","redirect","setRedirect","password","setPassword","email","setEmail","dispatch","handleSubmit","preventDefault","onSubmit","name","id","placeholder","onChange","target","onClick","class","signInWithPopup","then","result","isNewUser","catch","error","alert","message","Register","confPassword","setconfPassword","username","setUsername","for","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbc7805d.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'\n\n\nexport const StateContext= createContext()\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer,initialState)}>\n      {children}\n  </StateContext.Provider>\n);\n   \nexport const useStateValue = ()=> useContext(StateContext)","\nconst getLocation= async ()=>{\n    const url = \"https://apility-io-ip-geolocation-v1.p.rapidapi.com/%7Bip%7D\";\n    try {\n        const resp = async()=>{await fetch(url, {\n          method: \"GET\",\n          query: { format: \"json\" },\n          headers: {\n            \"x-rapidapi-host\": \"apility-io-ip-geolocation-v1.p.rapidapi.com\",\n            \"x-rapidapi-key\":\n              \"ad6b92cfdf0msh41581692f8b3841p131574jsnde26edf72323\",\n            useQueryString: true,\n          },\n        });}\n        const {response}= await resp()\n        return response\n        \n    } catch (error) {\n        console.log(error)\n    }\n    \n}\n\nexport default getLocation","import React,{useEffect} from 'react';\nimport getLocation from \"./getLocation\"\n\n\n \nconst Home = () => {\n    useEffect(() => {\n      getLocation();\n    }, []);\n    return (\n      <div>\n        <div>\n          <h1>NutriCalc</h1>\n          <h5>Your farm inputs calculator</h5>\n          <h6>Its easy! Click on new farm input, choose the type of crop, the type of fertilizer input, the land acreage </h6>\n        <button></button>\n        </div>\n        <div className='' style={{display:\"flex\"}}>\n            <div style={{flex:3,flexDirection:\"column\"}}>\n                \n            </div>\n            <div style={{flex:7,flexDirection:\"column\"}}>\n                \n            </div>\n        </div>\n      </div>\n    );\n}\n \nexport default Home;","import React from 'react';\n \nconst About = () => {\n    return (\n       <div>\n          <h1>About US</h1>\n          <p>About US page body content</p>\n       </div>\n    );\n}\n \nexport default About;","import React from 'react';\n \nconst Contact = () => {\n    return (\n       <div>\n          <h1>Contact US</h1>\n          <p>Contact US page body content</p>\n       </div>\n    );\n}\n \nexport default Contact;","import React from 'react';\n \nconst Error = () => {\n    return (\n       <div>\n          <p>Error: Page does not exist!</p>\n       </div>\n    );\n}\n \nexport default Error;","import React from 'react';\n \nimport { NavLink } from 'react-router-dom';\n \nconst Navigation = () => {\n    return (\n       <div>\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/about\">About</NavLink>\n          <NavLink to=\"/contact\">Contact</NavLink>\n       </div>\n    );\n}\n \nexport default Navigation;","import firebase from \"firebase\"\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAPlp8cdax4s5bm8NifmmcVW8AoJVGQby8\",\n  authDomain: \"nutricalc-dca46.firebaseapp.com\",\n  databaseURL: \"https://nutricalc-dca46.firebaseio.com\",\n  projectId: \"nutricalc-dca46\",\n  storageBucket: \"nutricalc-dca46.appspot.com\",\n  messagingSenderId: \"375679745437\",\n  appId: \"1:375679745437:web:08ef675f8ed19509768374\",\n  measurementId: \"G-KZZLP7LBBZ\",\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nconst auth = firebase.auth()\n\nconst provider = new firebase.auth.FacebookAuthProvider()\n\nexport {provider,auth}","export const initialState = {\n    user:null,\n}\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n}\nconst reducer = (state,action) =>{\n    console.log(action)\n    switch(action.type){\n        case actionTypes.SET_USER:\n            return{\n                ...state,\n                user:action.user,\n            }\n        default:\n            return state\n    }\n\n}\nexport default reducer","import React,{useState} from \"react\";\nimport \"./Login.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useStateValue } from \"../StateProvider\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport {provider, auth} from \"../firebase\";\nimport { actionTypes } from \"../reducer\"\n\nconst Login  = (e)=> {\n    const [redirect,setRedirect]=useState(null)\n    const [password,setPassword]=useState('')\n    const [email,setEmail]=useState('')\n    const [{user},dispatch]=useStateValue()\n    const handleSubmit=(e)=>{\n      e.preventDefault();\n      // send data to auth API and dispatch SET_USER\n      console.log(email, password);\n      setRedirect(true);\n      \n    }\n    const handleLogin =(e)=>{\n        e.preventDefault()\n        console.log(user)\n        // send data to facebook auth API and dispatch SET_USER\n        auth.signInWithPopup(provider).then((result)=>{\n            console.log(result)\n            const user = result.user;\n            dispatch({\n                type:actionTypes.SET_USER,\n                user:user\n            })\n            if (user?.isNewUser){\n                // send data to database\n            }\n        }).catch((error)=>{alert(error.message)})\n        setRedirect(true)\n        // if sign in with facebook or google there isno data and dispatchh SET_USER\n\n            \n    }\n    if (redirect){\n        return <Redirect to=\"/\"/>\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"page-header\">\n          <h2>Sign In</h2>\n        </div>\n        <div className=\"form-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label>Email address</label>\n              <input\n                type=\"email\"\n                name=\"emailField\"\n                className=\"form-control\"\n                id=\"emailInput\"\n                placeholder=\"your@example.com\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                name=\"passwordField\"\n                className=\"form-control\"\n                id=\"passwordInput\"\n                placeholder=\"enter your password\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              ></input>\n            </div>\n            <button\n              type=\"submit\"\n              onClick={handleSubmit}\n              className=\"btn btn-primary btn-sm btn-block\"\n            >\n              Login\n            </button>\n            <Link to=\"/register\">dont have an account? Register here</Link>\n          </form>\n         <hr/>\n          <div class=\"or-text d-flex align-items-center justify-content-center\">\n            <span>or</span>\n          </div>\n          <hr/>\n          <button\n            type=\"button\"\n            onClick={handleLogin}\n            className=\"btn btn-primary btn-sm btn-block\"\n            id=\"facebookBtn\"\n          >\n             <span><FacebookIcon/> </span> SIGN IN WITH FACEBOOK\n          </button>\n        </div>\n      </div>\n    );\n}\n\nexport default Login","import React,{ useState } from 'react'\nimport {  Link, Redirect } from \"react-router-dom\";\n\nconst Register= ()=>{\n   const [email,setEmail]=useState(\"\")\n   const [password, setPassword] = useState(\"\");\n   const [confPassword, setconfPassword] = useState(\"\");\n   const [username, setUsername] = useState(\"\");\n   const [redirect,setRedirect]=useState(null)\n\n   const handleSubmit= (e)=>{\n     e.preventDefault()\n    //  send info to AUTH API\n     setRedirect(true)\n   }\n   if (redirect) {\n     return <Redirect to=\"/\" />;\n   }\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"page-header\">\n            <h2>Sign Up </h2>\n          </div>\n\n          <div className=\"form-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label for=\"email address\">Username</label>\n                <input\n                  type=\"email\"\n                  class=\"form-control\"\n                  id=\"usernameField\"\n                  placeholder=\"your username\"\n                  value={username}\n                  onChange={(e) => {\n                    setUsername(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div className=\"form-group\">\n                <label>Email address</label>\n                <input\n                  type=\"email\"\n                  name=\"emailField\"\n                  className=\"form-control\"\n                  id=\"emailInput\"\n                  placeholder=\"your@example.com\"\n                  value={email}\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  name=\"passwordField\"\n                  className=\"form-control\"\n                  id=\"passwordInput\"\n                  placeholder=\"enter your password\"\n                  value={password}\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  name=\"passwordConfirmField\"\n                  className=\"form-control\"\n                  id=\"passwordConfirmInput\"\n                  placeholder=\"enter your password\"\n                  value={confPassword}\n                  onChange={(e) => {\n                    setconfPassword(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary btn-sm btn-block\">\n                Register\n              </button>\n\n              <Link to=\"/login\">already have an account? Login here</Link>\n\n              {/* <Link to=\"/register\">dont have an account? Register here</Link> */}\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Register","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useStateValue } from \"./StateProvider\";\n \nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Error from './components/Error';\nimport Navigation from './components/Navigation';\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nfunction App () {\n    const [{ user }] = useStateValue();\n    \n    return (user?\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter>: <Login/>\n    );\n  }\n\n \nexport default App;\n\n\n// import React from 'react';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         NutriCalc\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}